{
    "collab_server" : "",
    "contents" : "################################################################################\n# Setup\n################################################################################\n\n# Load required packages\nlibrary(boot)\nlibrary(investr)\nlibrary(ggplot2)\nlibrary(lme4)\nlibrary(magrittr)\nlibrary(nlme)\nlibrary(RColorBrewer); cols <- brewer.pal(9, \"Set1\")\nlibrary(rjags)\n\n# Bladder data\nsubject <- as.factor(rep(1:23, times = 8))\nvolume <- rep(c(10, 25, 50, 75, 100, 125, 150, 175), each = 23) / 10\nHD <- c(13.2, 11.1, 10.3, NA, 4.8, 7.7, NA, 5.9, 1.9, 6.5, 19.8,\n        14.6, NA, NA, 9.7, 17.2, 10.6, 19.3, 8.5, 6.9, 8.1, 14.8, 13.7,\n        27.4, 27.5, 15, 10, 18.6, 12.6, 24, 28.4, 12.5, 16.7, 29.6,\n        27.1, 14, 18.7, 20.3, 35.8, 23.6, 37.4, 31.3, 23.7, 22, 34.3,\n        28.5, 41.6, 58.1, 34.2, 28.8, 29.9, 31.4, 46.9, 44.4, 26.8,\n        30.6, 51.7, 49.8, 19.1, 35.8, 38.9, 41.4, 49.9, 58.6, 54.8, 44,\n        39.1, 58.5, 41.5, 60.1, 78.8, 49.4, 46.4, 39.4, 45.3, 50.4,\n        70.7, 54.4, 41.8, 72.2, 67.5, 39.2, 49.6, 65.1, 69.7, 67.7,\n        73.7, 78.3, 65.7, 44.7, 72.1, 59.8, 73.9, 91.5, 71.3, 54.8, NA,\n        48, 67.8, 89.4, 63.1, 49.6, 81.9, 79.1, 48.7, 65.6, 65.1, 81.9,\n        87.7, 79.4, 93, 80.3, 68.9, 90.9, 77.5, 85.5, 98.3, 81.3, 69.4,\n        NA, 66.6, 81, 105.8, 83.5, 60.8, 95.1, 95.1, 67, 85.3, 86.9,\n        96.6, 89.3, 102.6, NA, 93.6, 93.3, 105, 92.9, 95.6, 111.4, 94,\n        73.9, NA, NA, 91.2, 113.5, 114.5, 80.1, 115.4, 109.8, 72.7,\n        90.4, 98.6, 115, 108, 110.9, NA, 99.2, 102.4, 117.5, 99.4,\n        107.4, 121, 104.3, NA, NA, NA, 99.8, 127.3, 124, 87.1, NA, NA,\n        NA, NA, 107.2, 117, 114.8, 122.4, NA, 112.2, 104.7, 124.2, 113)\nbladder <- data.frame(subject = subject, HD = HD, volume = volume)\nbladder <- na.omit(bladder)  # omit missing values for this analysis\n\n\n################################################################################\n# Basic graphics\n################################################################################\n\n# Scatterplot of transformed data\np1 <- ggplot(bladder, aes(x = volume, y = HD ^ (3 / 2))) +\n  geom_point(alpha = 0.7) +\n  theme_light() +\n  labs(x = \"Volume (cl)\", y = expression(HD^{3/2}))\n\n# Spaghettiplot of transformed data\np2 <- ggplot(bladder, aes(x = volume, y = HD ^ (3 / 2), \n                          color = subject, group = subject)) +\n  geom_line(alpha = 0.4) +\n  geom_point(alpha = 0.7) +\n  theme_light() +\n  labs(x = \"Volume (cl)\", y = expression(HD^{3/2})) +\n  scale_color_discrete(guide = FALSE)\n\n# Layout plots on a grid\npdf(\"spaghettiplots.pdf\", width = 8, height = 4)\ngridExtra::grid.arrange(p1, p2, ncol = 2)\ndev.off()\n\n\n################################################################################\n# Linear mixed-effects models\n################################################################################\n\n# LMM for transformed data using nlme package\nmod1 <- lme(HD ^ (3 / 2) ~ volume, random = list(subject = pdDiag( ~ volume)),\n            data = bladder)\n\n# knitr::kable(summary(transformed.lme)$tTable, format = \"latex\", digits = 3)\n\n# LMM for transformed data using lme4 package\nmod2 <- lmer(HD ^ (3 / 2) ~ volume + (0 + 1 | subject) + (0 + volume | subject), \n             data = bladder)\n\n\n################################################################################\n# Inverse estimation\n################################################################################\n\n# Point estimate\ninvest(mod1, y0 = 110 ^ (3/2), interval = \"none\")\n# [1] 8.015521\n\n# Wald-based interval\ninvest(mod1, y0 = 110 ^ (3/2), interval = \"Wald\")\n# estimate     lower     upper        se \n# 8.015521  4.185376 11.845665  1.954191\n\n# Estimated variance of Y0\nz <- data.frame(volume = invest(mod1, y0 = 110 ^ (3/2), interval = \"none\"))\ninvestr:::varY(mod1, newdata = z)\n\n# Standard erros using the car package\nparams <- c(fixef(mod1), 110 ^ (3/2))\ncovmat <- diag(3)\ncovmat[1:2, 1:2] <- vcov(mod1)\ncovmat[3, 3] <-  investr:::varY(mod1, newdata = z)\nnames(params) <- c(\"b0\", \"b1\", \"y0\")\ncar::deltaMethod(params, g = \"(y0 - b0) / b1\",  vcov. = covmat)$SE\n\n# Inversion interval\ninvest(mod1, y0 = 110 ^ (3/2), upper = 30)\n# estimate     lower     upper \n# 8.015521  4.227965 11.919182\n\n# Inversion interval using different distribution\ntvals <- qt(c(0.025, 0.975), df = nrow(bladder.na) - 1)\ninvest(mod1, y0 = 110 ^ (3/2), q1 = tvals[1L], q2 = tvals[2L], upper = 30)\n# estimate     lower     upper \n# 8.015521  4.200185 11.948696 \n\n\n################################################################################\n# Parametric bootstrap\n################################################################################\n\n# Variance function\nvarY <- function(object, x) {\n  vc <- as.data.frame(lme4::VarCorr(object))$vcov\n  vc[1] + vc[2] * x ^ 2 + vc[3]\n}\n\n# Point estimate from lme4 fit\nfe <- unname(fixef(mod2))  # fixed-effects\n(x0.est <- (110 ^ (3/2) - fe[1]) / fe[2])\n\n# fe3 <- unname(fixef(mod3))  # fixed-effects\n# (x0.est <- ((110 - fe[1]) / fe[2]) ^ (3/2))\n\n\n# Parametric bootstrap replicates\npboot <- bootMer(transformed.lmer, nsim = 999*2, seed = 105, FUN = function(.) {\n  \n  # Point estimate\n  var.Y0.boot <- varY(., x = x0.est)\n  fe.boot <- unname(fixef(.))\n  if (all(getME(., \"y\") == bladder.na$HD)) {\n    y0.boot <- 110 ^ (3/2)\n  } else {\n    y0.boot <- rnorm(1, mean = 110 ^ (3/2), sd = sqrt(var.Y0.boot))\n  }\n  (y0.boot - fe.boot[1L]) / fe.boot[2L]\n})\n\n# Save bootstrap replicates\n# save(pboot, file = \"pboot.RData\")\n\nplot(pboot)\n\n# Summary of bootstrap replicates\nsummary(pboot)\n\nboot.ci(pboot, type = c(\"norm\", \"perc\", \"stud\"))\n",
    "created" : 1507301351922.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "573494422",
    "id" : "F8161BE4",
    "lastKnownWriteTime" : 1507304028,
    "last_content_update" : 1507304028691,
    "path" : "C:/Users/greenweb/Desktop/devel/inverse-manuscript/greenwell-inverse-2017.R",
    "project_path" : "greenwell-inverse-2017.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}